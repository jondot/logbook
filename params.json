{"body":"Logbook allows you to record memories easily from your command line into\r\nvirtual book(s). Books are simply private Github Gists (backend is\r\nreplaceable).\r\n\r\n\r\nIt is heavily inspired from its pythonish friend, http://maebert.github.com/jrnl.\r\n\r\nI built it because I love Ruby, it was easy enough, and I really loved\r\nthe idea of storing as Gists as opposed to plain files.\r\n\r\n\r\n\r\n# Usage\r\n\r\nFor brevity's sake, the Logbook gem name and executable is `lg`.\r\n\r\n    $ gem install lg\r\n    $ lg\r\n\r\n\r\nIf you want private Gists attached to your user (you most probably\r\nwant that), make sure to set your Github credentials as environment\r\nvariables, example:\r\n\r\n    $ export GITHUB_USER=youruser\r\n    $ export GITHUB_PASSWORD=yourpw\r\n\r\nNow we need to make a first `book` and start `add`ing into it.  \r\n\r\n## Setting up a book\r\n\r\nCreate a new book with the `lg book` command. You can give it a\r\ncover, in this case `The Wizzard of Oz`.\r\n\r\n    $ lg book The Wizzard of Oz\r\n\r\n\r\n## Adding things\r\n\r\nSimply say 'lg add' and your memory in a short sentence.\r\n\r\n    $ lg add just wrote the logbook gem README\r\n\r\nYou might find it convenient to specify when a thing happend explicitly,\r\njust make sure to specify a natural date such as `yesterday` separated\r\nby a colon `:`. Translation done with the `chronic` gem.\r\n\r\n    $ lg add yesterday: wrote the logbook gem README\r\n\r\n\r\n## More\r\n\r\nYou can safely skip this if that's all what you're looking for.\r\n\r\n## Switching books\r\n\r\nSwitch between books, when you know what you want, you can explicitly\r\nspecify the ID.\r\n\r\n    $ lg book book-id\r\n\r\nOr pick from a menu, leaving arguments blank:\r\n\r\n    $ lg book\r\n    1    The Wizzard of Oz   deadbeef0aef\r\n    ...\r\n    Pick one: 1\r\n\r\n\r\n## Listing things\r\n\r\nSay `lg all` when you want to see everything you've recorded.\r\n\r\n\r\n\r\n\r\n# Philosophy\r\n\r\nCommand line is awesome. Its fast, and you feel it when you're less\r\ndependent on your mouse for your development work (e.g. VIM).  \r\n\r\nYou should just Alt/Command-Tab, write a line and go back working.  \r\n\r\nYou should be expected to remember at most one commands (pitfall of success) to do actual work. Seriously, [focus](http://ezliu.com/focus/).\r\n\r\n\r\n## There's no search like in jrnl\r\n\r\nFeature slim. Use gist search for that. True, its limited, but as of now, I believe\r\nGithub are working on improving that.  \r\n\r\nIn actuallity, `jrnl`'s search loads all of your entries to memory and\r\nperforms search on an in-memory structure.  \r\nIf the need arises, it should be dead easy to\r\nmake *that* kind of search in `logbook`.\r\n\r\n## There's no delete/modify\r\n\r\nAgain, feature slim. If you were using a real logbook, you'd\r\njust cross the bad entry. It will still be there.  \r\nIf you must, you can always use the gist interface for that.  \r\n\r\n## There's no analytics, let me reap added value from my work!\r\n\r\nActually, a gist entry is a Git repository.  \r\nThe modeling on-top-of a\r\nGist was done intentionally. Clone your book and\r\ntreat it like a Git repo.\r\n\r\nFrom there, you can script against git and/or run countless analysis tools on your repository.\r\n\r\n# Developers\r\n\r\nSet up development: `git clone`, `bundle install`, `bundle exec guard start`.  \r\nBuild/install a development snapshot: `rake build`, `rake install`.\r\n\r\nCredit: Thanks to @defunkt!. I've included and heavily modified a version of [defunkt/gist](https://github.com/defunkt/gist) in this project.  \r\n\r\n\r\n\r\n# Contributing\r\n\r\nFork, implement, add tests, pull request, get my everlasting thanks and a respectable place here :).\r\n\r\n\r\n# Copyright\r\n\r\nCopyright (c) 2012 [Dotan Nahum](http://gplus.to/dotan) [@jondot](http://twitter.com/jondot). See MIT-LICENSE for further details.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Logbook","tagline":"Logs your thoughts quickly and easily"}